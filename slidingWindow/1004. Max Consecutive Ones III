Input: nums = [1,1,1,0,0,0,1,1,1,1,0], k = 2
Output: 6
Explanation: [1,1,1,0,0,1,1,1,1,1,1]
Bolded numbers were flipped from 0 to 1. The longest subarray is underlined.


class Solution {
    public int longestOnes(int[] nums, int k) {
        int i = 0;
        int j = 0;
        int zeroCount = 0;
        int len = 0;

        while (j < nums.length) {
            if (nums[j] == 0) {
                zeroCount++;
            }

            while (zeroCount > k) {
                if (nums[i] == 0) {
                    zeroCount--;
                }
                i++;
            }

            len = Math.max(len, j - i + 1);
            j++;
        }

        return len;
    }
}
